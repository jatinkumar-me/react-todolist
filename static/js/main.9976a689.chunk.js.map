{"version":3,"sources":["Todoitem.js","Todos.js","ItemInput.js","Todoitemslist.js","Operations.js","App.js","reportWebVitals.js","index.js"],"names":["Todoitem","name","date","time","deleteItem","completed","id","toggleDone","countDownDate","calculateTimeLeft","now","Date","getTime","distance","timeLeft","days","Math","floor","hours","minutes","seconds","useState","setTimeleft","useEffect","setTimeout","className","options","perspective","scale","Object","keys","length","onClick","Todos","totalTodoItems","todoItems","searchField","map","item","pos","ItemInput","onSubmit","nameChange","timeChange","dateChange","type","onInput","value","placeholder","Todoitemslist","Operations","onSearchChange","sort","sortMethod","hideDone","htmlFor","onChange","App","addItem","state","nameInput","push","random","dateInput","timeInput","dateAdded","updateDisplay","setState","sortItems","sortMethodSelector","alert","displayTodos","setName","event","target","setDate","setTime","splice","findIndex","listItem","parseFloat","obj","assign","filterTodos","todo","toLowerCase","includes","sortEventHandler","a","b","compareMethod","this","filterMethod","filter","showingCompleted","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9976a689.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Tilt from 'react-tilt'\r\n\r\nconst Todoitem = ({ name, date, time, deleteItem, completed, id, toggleDone, countDownDate }) => {\r\n\r\n    // const countDownDate = new Date(`${date} ${time === \"\" ? \"00:00\" : time}`).getTime();\r\n\r\n    const calculateTimeLeft = () => {\r\n        let now = new Date().getTime();\r\n        let distance = countDownDate - now;\r\n        let timeLeft = {};\r\n        if (distance > 0) {\r\n            timeLeft = {\r\n                days: Math.floor(distance / (1000 * 60 * 60 * 24)),\r\n                hours: Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n                minutes: Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),\r\n                seconds: Math.floor((distance % (1000 * 60)) / 1000),\r\n            }\r\n        }\r\n        return timeLeft\r\n    }\r\n\r\n    const [timeLeft, setTimeleft] = useState(calculateTimeLeft)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setTimeleft(calculateTimeLeft());\r\n        }, 1000);\r\n    });\r\n\r\n\r\n    return (\r\n        <Tilt className=\"tilt\" options={{ perspective: 1800, scale: 1.1 }}>\r\n            <div className=\"Todoitem\" >\r\n                <h3 className=\"todoName\">{name}</h3>\r\n                <div>\r\n                    {(date !== \"\") ? <span>{timeLeft.days === 0 ? \"Today\" : `On ${date}`}</span> : <span />}\r\n                    {(time !== \"\" && date !== \"\") ? <span> at {time}</span> : <span />}\r\n                </div>\r\n                {!completed && date !== \"\" ?\r\n                    Object.keys(timeLeft).length === 0 ?\r\n                        <div>You are past the date</div> :\r\n                        <div>\r\n                            {timeLeft.days === 0 ? <span></span> : <span> {timeLeft.days} day{timeLeft.days === 1 ? \"\" : \"s\"} </span>}\r\n                            {timeLeft.hours === 0 ? <span></span> : <span>{timeLeft.hours} hour{timeLeft.hours === 1 ? \"\" : \"s\"} </span>}\r\n                            {timeLeft.minutes === 0 ? <span></span> : <span>{timeLeft.minutes} minute{timeLeft.minutes === 1 ? \"\" : \"s\"} </span>}\r\n                            <span> {timeLeft.seconds} second{timeLeft.seconds === 1 ? \"\" : \"s\"} remaining </span>\r\n                        </div>\r\n                    : <div></div>}\r\n                <div className=\"buttonContainer\">\r\n\r\n                    <button onClick={toggleDone} id={id} className={`doneStatus${completed} Tilt-inner`} >\r\n                        <span><i className=\"fas fa-check\"></i></span>\r\n                    </button>\r\n                    <button onClick={deleteItem} id={id} className=\"deleteButton Tilt-inner\"><span><i className=\"fas fa-trash-alt\"></i></span></button>\r\n\r\n                </div>\r\n            </div>\r\n        </Tilt>\r\n    )\r\n}\r\n\r\nexport default Todoitem\r\n","import React from 'react'\r\nimport Todoitem from './Todoitem'\r\nimport './Todos.scss'\r\n\r\n\r\nconst Todos = ({totalTodoItems, todoItems, deleteItem, toggleDone, searchField }) => {\r\n    return (\r\n\r\n        <div>\r\n            {searchField === '' ?\r\n\r\n                <h4>You have {totalTodoItems.length} item{totalTodoItems.length === 1 ? \"\" : \"s\"} to do. </h4> :\r\n                <h4>{ todoItems.length === 0 ? `No item named \"${searchField}\" exists. ` : `Showing ${todoItems.length} results for \"${searchField}\"`}</h4>\r\n\r\n            }\r\n\r\n            <div className=\"itemList\">\r\n                {\r\n                    todoItems.map((item, pos) => {\r\n                        return (\r\n                            <Todoitem\r\n                                name={item.name}\r\n                                date={item.date}\r\n                                time={item.time}\r\n                                id={item.id}\r\n                                completed={item.completed}\r\n                                key={pos}\r\n                                deleteItem={deleteItem}\r\n                                toggleDone={toggleDone}\r\n                                countDownDate={item.countDownDate}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n","import React from 'react'\r\n\r\n\r\nconst ItemInput = ({ onSubmit, nameChange, timeChange, dateChange, name, date, time }) => {\r\n    return (\r\n        <div className=\"itemInput\" >\r\n            <input type=\"text\" onInput={nameChange} value={name} placeholder=\"Enter todo\" id=\"textInput\"/>\r\n            <input type=\"date\" onInput={dateChange} value={date} />\r\n            <input type=\"time\" onInput={timeChange} value={time} />\r\n            <button onClick={onSubmit} className=\"submitButton\"><span>Add item</span></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemInput\r\n","export const Todoitemslist = [\r\n    // {\r\n    //     name: 'Go to the cinema',\r\n    //     date: '2018-12-31',\r\n    //     time: '14:49'\r\n    // },\r\n    // {\r\n    //     name: 'Go to the mall',\r\n    //     date: '2019-12-31',\r\n    //     time: '14:49'\r\n    // },\r\n    // {\r\n    //     name: 'Go to the Shop',\r\n    //     date: '2018-12-11',\r\n    //     time: '14:49'\r\n    // },\r\n    // {\r\n    //     name: 'Go to the Hospital',\r\n    //     date: '2018-12-21',\r\n    //     time: '14:49'\r\n    // },\r\n    // {\r\n    //     name: 'Go to the Forest',\r\n    //     date: '2018-12-11',\r\n    //     time: '14:49'\r\n    // },\r\n    // {\r\n    //     name: 'Go to the College',\r\n    //     date: '2018-12-11',\r\n    //     time: '14:49' \r\n    // }\r\n    \r\n]","import React from 'react'\r\n\r\nconst Operations = ({searchField, onSearchChange, sort, hideDone, sortMethod}) => {\r\n    return (\r\n        <div className = \"operationBar\">\r\n            <div className=\"searchBox\">\r\n                <input id=\"searchInput\" type=\"text\" placeholder=\"Search\" value={searchField} onInput={onSearchChange}/>\r\n                <label htmlFor=\"cars\"><i className=\"fas fa-search\"></i></label>\r\n            </div>\r\n            \r\n            <select name=\"sortBy\" id=\"sortBy\" onChange={sort} value={sortMethod}>\r\n                <option value=\"dateAdded\">Date Added</option>\r\n                <option value=\"name\">A-Z</option>\r\n                <option value=\"timeRemaining\">Time Remaining</option>\r\n            </select>\r\n            {/* <i className=\"fas fa-sort-alpha-down sortAZ\"></i>\r\n            <i className=\"fas fa-sort-alpha-down-alt sortZA\"></i>\r\n            \r\n            <button onClick={hideDone}>Hide done <i className=\"fas fa-filter\"></i></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Operations\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Todos from './Todos'\nimport ItemInput from './ItemInput'\nimport { Todoitemslist } from './Todoitemslist'\nimport Operations from './Operations'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      displayTodos: [],\n      searchField: '',\n      nameInput: '',\n      dateInput: '',\n      timeInput: '',\n      showingCompleted: true,\n      sortMethod: 'dateAdded',\n    }\n  }\n\n\n  addItem = () => {\n    if (this.state.nameInput !== \"\") {\n      Todoitemslist.push({\n        id: Math.random() * 1000,\n        name: this.state.nameInput,\n        date: this.state.dateInput,\n        time: this.state.timeInput,\n        countDownDate: new Date(`${this.state.dateInput === \"\" ? \"3000-12-29\" : this.state.dateInput } ${this.state.timeInput === \"\" ? \"00:00\" : this.state.timeInput}`).getTime(),\n        dateAdded: new Date(),\n        completed: false\n      });\n      this.updateDisplay()\n\n      // Resetting input fields\n      this.setState({\n        nameInput: '',\n        dateInput: '',\n        timeInput: '',\n        searchField: '',\n      }, this.sortItems(this.sortMethodSelector))   //Sorting items if a new item is added\n    } else alert('Please enter valid input!')\n  }\n\n  updateDisplay = () => {\n    this.setState({ displayTodos: Todoitemslist })\n  }\n\n  setName = (event) => {\n    this.setState({ nameInput: event.target.value })\n  }\n  setDate = (event) => {\n    this.setState({ dateInput: event.target.value })\n  }\n  setTime = (event) => {\n    this.setState({ timeInput: event.target.value })\n  }\n\n  deleteItem = (event) => {\n    let elementWithId = (listItem) => listItem.id === parseFloat(event.target.id)\n    Todoitemslist.splice(Todoitemslist.findIndex(elementWithId), 1)\n    this.updateDisplay()\n  }\n\n  toggleDone = (event) => {\n    Todoitemslist.map(\n      obj => (obj.id === parseFloat(event.target.id) ? Object.assign(obj, { completed: !obj.completed }) : obj)\n    )\n    this.updateDisplay()\n  }\n\n  onSearchChange = (event) => {\n    // Using Closures =================================================================================\n    // This.setState is an async function\n    this.setState({ searchField: event.target.value },\n      this.filterTodos(todo => todo.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n      ))\n  }\n\n  sortEventHandler = (event) => {\n    this.setState({ sortMethod: event.target.value }, this.sortItems(this.sortMethodSelector))\n  }\n\n  sortMethodSelector = (a, b) => {\n    switch (this.state.sortMethod) {\n      case \"name\": return (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0);\n      case \"dateAdded\": return (a.dateAdded.getTime() > b.dateAdded.getTime()) ? 1 : ((b.dateAdded.getTime() > a.dateAdded.getTime()) ? -1 : 0);\n      case \"timeRemaining\": return (a.countDownDate > b.countDownDate) ? 1 : ((b.countDownDate > a.countDownDate) ? -1 : 0);\n      default: return \"\";\n    }\n    \n  }\n\n  sortItems = (compareMethod) => {\n    return function () {\n      this.setState({\n        displayTodos: Todoitemslist.sort(compareMethod)\n      })\n    }\n\n  }\n\n\n  filterTodos = (filterMethod) => {\n    return function () {\n      this.setState({\n        displayTodos: Todoitemslist.filter(filterMethod)\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n          <h1>Todos List</h1>\n        </header>\n\n        <div className=\"sticky\">\n          <ItemInput\n            onSubmit={this.addItem}\n            nameChange={this.setName}\n            dateChange={this.setDate}\n            timeChange={this.setTime}\n            name={this.state.nameInput}\n            date={this.state.dateInput}\n            time={this.state.timeInput}\n          />\n        </div>\n\n        <Operations\n          onSearchChange={this.onSearchChange}\n          searchField={this.state.searchField}\n          sortMethod={this.state.sortMethod}\n          sort={this.sortEventHandler}\n          hideDone={this.hideDone}\n        />\n\n        <Todos\n          totalTodoItems={Todoitemslist}\n          todoItems={this.state.displayTodos}\n          deleteItem={this.deleteItem}\n          toggleDone={this.toggleDone}\n          searchField={this.state.searchField} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n\n    // const compareMethod = (a, b) => {\n    //   if (isNaN(a.countDownDate)) {\n    //     a.countDownDate = Infinity\n    //   }\n    //   switch (this.state.sortMethod) {\n    //     case \"name\": return (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0);\n    //     case \"dateAdded\": return (a.dateAdded.getTime() > b.dateAdded.getTime()) ? 1 : ((b.dateAdded.getTime() > a.dateAdded.getTime()) ? -1 : 0);\n    //     case \"timeRemaining\": return (a.countDownDate > b.countDownDate) ? 1 : ((b.countDownDate > a.countDownDate) ? -1 : 0);\n    //     default: return \"\";\n    //   }\n    // }\n\n  // hideDone = () => {\n  //   console.log(\"hideDone clicked!\")\n  //   this.setState({showingCompleted : !this.state.showingCompleted}, this.filterTodos(todo => !todo.completed))\n\n  // }\n  // console.log(todo.name.toLowerCase())\n  // console.log(this.state.searchField.toLowerCase())\n  // console.log(todo.name.toLowerCase().includes(this.state.searchField.toLowerCase()))\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}